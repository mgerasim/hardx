@model HardX.Models.Shipping
@using HardX.Models

@{
    ViewBag.Title = "Распределение поставки";
}

<h2>@ViewBag.Title</h2>



<script>
	$(function() {
		$( "#tabs" ).tabs();
	});
</script>



		<table id="edit_shipping" class="table table-bordered">

					<tr>
						<th>#
						</th>
						<th>
							Оргтехника
						</th>
						<th>
							Расходник
						</th>
						<th>
							Кол-во
						</th>

						@foreach (var item in ViewBag.Stores) {
							<th>
								@item.Name
							</th>
						}
						
					</tr>

				@foreach (var item in Model.Shippingitems) {
					<tr>
						<td>
							@item.ID
						</td>

						<td>
							@if (item.Devmodel!= null) {
								@item.Devmodel.FullName					
							}
						</td>

						<td>
							@if (item.Matmodel!=null) {
								@item.Matmodel.FullName
							}
						</td>
						<td>		
								<div shippingitem_id=@item.ID class="shippingitem_count">			
									@item.Count					
								</div>
						</td>
						
						@foreach (var store in ViewBag.Stores) {
							<td>
								@{
									var dd = item.Distributes.Count(x => x.StoreID==store.ID);
									var aa=0;
									if (dd==1) {
										foreach(var ss in (item.Distributes.Where(x => x.StoreID==store.ID)).Select(x => x.Status) ) {
											aa = ss;
										}
									}
									dd = aa;
									if (((List<Shippingitemdistribute>) ViewBag.Distributes).Where(distr => distr.StoreID == store.ID && distr.ShippingitemID == @item.ID).Sum(d => d.Count) == 0) {
										dd = 1;
									}
								}

							<div id=distribute@(store.ID)@(item.ID) status=@dd storeid=@store.ID shippingitemid=@item.ID class="distribute shippingitem_@(item.ID)" >

							
								@( ((List<Shippingitemdistribute>) ViewBag.Distributes).Where(distr => distr.StoreID == store.ID && distr.ShippingitemID == @item.ID).Sum(d => d.Count)  )

							</div>
							</td>
						}

					</tr>
				}
		
		</table>
		<script>
			var isGreenAll=true;
			function UpdateColor() {
				isGreenAll=true;
				$(".shippingitem_count").each(function(index) {
					var count = 0;
					$(".shippingitem_"+$(this).attr("shippingitem_id")).each(function(jndex){
						count += parseInt( $(this).text() );
					});
					var count_distr = parseInt( $(this).text() );
					if (count_distr < count) {
						$(this).css("background-color","red");
						isGreenAll = false;
					} else
					if (count_distr == count) {
						$(this).css("background-color","green");
					} else
					if (count_distr > count) {
						$(this).css("background-color","orange");
						isGreenAll = false;
					}
				});
			}
			$(document).ready(function() {
				UpdateColor();
			});
		</script>

		<script>
			$(".distribute")
				.hover(function() {
						$(this).toggleClass("over-inline");
					})
					.unbind('click').click(function(e) {	

						if ($(this).attr("status")==3) {
							alert("Данная позиция уже распределена");
							return;
						}
						
						var $editable = $(this);
						if ($editable.hasClass('active-inline')) {
							return;
						};
						clicked = 0;
						
						content = $.trim($editable.html());
						
						$editable
							.addClass("active-inline")
							.empty();

						var editElement = '<input type="text" />';
						
						$(editElement)
							//.val(content)
							.appendTo($editable)
							.focus()
							.blur(function(e) {								
								$editable.trigger('blur');
							});
					})
					.unbind('blur').blur(function(e) {						
						clicked = 1;
						var $editable = $(this);						
						handleGetFail($editable);
					})
					.keyup(function(event){
						if(event.keyCode == 13){
							if (clicked == 1) {
								return;
							};
							clicked = 1;
							var $editable = $(this);
							handleGetSuccess($editable, $(this).attr("shippingitemid"), $(this).attr("storeid") );
						
						}
						if(event.keyCode == 27){
								if (clicked == 1) {
									return;
								};
								clicked = 1;
								var $editable = $(this);
								handleGetFail($editable);						
						}
					})
					;


					function handleGetSuccess(editable,shippingitem_id,store_id)
					{
					
						var contents = editable.find(':first-child:input').val();
					
						if (" "+(parseInt( contents ))+" "!=" NaN ") {											
							var count_delta = parseInt( contents );
							contents = count_delta ;
							contents = contents + " ";
							
							$.get('@Url.Action("Create", "Shippingitemdistribute")', { shippingitem_id:shippingitem_id , store_id: store_id, count: count_delta }, function(data) { UpdateColor()	});
											
						} else {
							contents = content;
						}

						editable
							.removeClass('active-inline')
							.contents()
							.replaceWith(contents);					
					}

				function handleGetFail(editable)
				{
					contents = content;
					
					editable
							.removeClass('active-inline')
							.contents()
							.replaceWith(contents);
				}
				var clicked = 0;
				var content=0;
		</script>
		
<div>
    
	<p>    
	@Html.ActionLink("Назад", "Index")
			<button id="distribute_save" type="button" class="btn btn-primary">Распределить</button>
		</p>
</div>

<script>
	$("#distribute_save").click(function() {
		if (isGreenAll==false) {
			alert("Общее количество поставки должно равно кол-ву распределению");
			return;
		}
		$.blockUI();
		$.get('@Url.Action("DistributeSave", "Shipping")', { id:@Model.ID }, function(data) { 	});
	});
</script>


<script>


	$(document).ajaxStop($.unblockUI);

				$(document).ajaxError(
    function (event, jqXHR, ajaxSettings, thrownError) {
        alert('[event:' + event + '], [jqXHR:' + jqXHR.responseText + '], [ajaxSettings:' + ajaxSettings + '], [thrownError:' + thrownError + '])');
    });

</script>