@model HardX.Models.NonTables.Deviceadded
@using HardX.Models

@{
    ViewBag.Title = "Оборудование";
}

<style type="text/css">
        .ui-dialog .ui-dialog-content
        {
            background-color: #ffd;
            border: solid 1px #ea7;
        }
		
        .ui-dialog .ui-dialog-titlebar
        {
            background-color: #ffd;
            border: solid 1px #ea7;
        }

        .ui-widget-content
        {
            background-color: #ffd;
            border: solid 1px #ea7;
        }
    </style>

<h1>Склад @ViewBag.theStore.Name</h1>	
<p>
	@Html.ActionLink("Назад к списку складов", "Index") |

	@Html.ActionLink("Перейти к расходным материалам", "Materials", new { id=ViewBag.theStore.ID }) |

	Отчет за период c &nbsp
	<input type="text" id="report_bgn" class="tcal" readonly="readonly"  style="width: 90px" />
	по &nbsp
	<input type="text" id="report_end" class="tcal" readonly="readonly"  style="width: 90px" />
	&nbsp
	<a href="#" id="report_get">Выгрузить итоговый отчёт</a>
	<script>
		$("#report_get").click(function() {	
			
			$.fileDownload( '/Store/ReportDevicesGet?repository_id=@ViewBag.theStore.ID&report_bgn='+$("#report_bgn").val()+'&report_end='+$("#report_end").val(), {
			
				preparingMessageHtml: "Происходит выгрузка отчёта, пожалуйста подождите...",
				failMessageHtml: "Возникли проблемы при формировании отчёта, необходимо повторить попытку позже."
			});
		});
	</script>
	<a href="#" id="report_get_device">Выгрузить список устройств</a>
	<script>
		$("#report_get_device").click(function() {	
			
			$.fileDownload( '/Store/ReportDevicesGetList?repository_id=@ViewBag.theStore.ID&report_bgn='+$("#report_bgn").val()+'&report_end='+$("#report_end").val(), {
			
				preparingMessageHtml: "Происходит выгрузка отчёта, пожалуйста подождите...",
				failMessageHtml: "Возникли проблемы при формировании отчёта, необходимо повторить попытку позже."
			});
		});
	</script>
</p>
<table class="tablesorter">
<thead>
    <tr>     
        <th class="filter-select filter-exact" data-placeholder="Выбрать...">
            Производитель
        </th>
	
        <th class="filter-select filter-exact" data-placeholder="Выбрать...">
            Тип
        </th> 
	 
        <th>
            Наименование
        </th>

		<th>
			Наличие
		</th>
				
		<th>
			Выдано
		</th>

		<th>
			Установлено
		</th>

		<th>
			Забраковано
		</th>

		<th>
            Действия
        </th>
    </tr>
</thead>

<tbody>

	@foreach (var item in   ( from devmain in
										(  from devmodel in
													(
														from device in (List<Device>) ViewBag.Devices
														where device.Store.ID == ViewBag.theStore.ID
														select new  {	
																		DevmodelID=device.Devmodel.ID,
																		StatusID = device.StatusID,											
																	}
													) 
						  
										  group devmodel by devmodel.DevmodelID into newGroup
										  select new {ID = newGroup.Key, DevmodelID = newGroup.Key, Devices = newGroup}
										)
								join devmodel_name in (List<Devmodel>) ViewBag.Devmodels on devmain.ID equals devmodel_name.ID
								select new	{
												ID = devmodel_name.ID,
												DevmodelID = devmodel_name.ID,
												Devmodel = devmodel_name,
												Count = devmain.Devices.Count(x=>x.StatusID==1),
												CountIssue = devmain.Devices.Count(x=>x.StatusID==2),
												CountSetup = devmain.Devices.Count(x=>x.StatusID==22),
												CountMarriage = devmain.Devices.Count(x=>x.StatusID==3),
											}
							)
		 ) {
    <tr> 
        <td>
			@item.Devmodel.Vendor.Name
        </td>
		    
        <td>
            @item.Devmodel.Typedev.Name
        </td>
	     <td>            
			<a href="@Url.Action("ShowDevices", new { id = ViewBag.theStore.ID, DevmodelID = item.DevmodelID})">                
				@item.Devmodel.Name
            </a>	
        </td>
		<td>
			@{
				// Наличие
			}	
			<div id="mat@(item.ID)">				
				@item.Count
				
			</div>
			
			<script>
				function handleGetSuccess@(item.ID)(editable)
				{
					var contents = editable.find(':first-child:input').val();
					
					if (" "+(parseInt( contents ))+" "!=" NaN ") {											
						var count_delta = parseInt( contents );
						contents = parseInt( contents ) + parseInt( content ) ;
						contents = contents + " ";
											
						if (count_delta > 0) {
							$.get('@Url.Action("DevicesGet", "Store")', { repository_id: @(ViewBag.theStore.ID), devmodel_id: @(item.DevmodelID), count_delta: count_delta }, function(data) {	});
						} 
						else {
							$.get('@Url.Action("DevicesDel", "Store")', { repository_id: @(ViewBag.theStore.ID), devmodel_id: @(item.DevmodelID), count_delta: Math.abs(count_delta) }, function(data) {	});
						}
											
					} else {
						contents = content;
					}

					editable
						.removeClass('active-inline')
						.contents()
						.replaceWith(contents);
				}

				function handleGetFail(editable)
				{
					contents = content;
					
					editable
							.removeClass('active-inline')
							.contents()
							.replaceWith(contents);
				}

				var clicked = 0;
				var content=0;
				$("#mat@(item.ID)")
					.hover(function() {
						$(this).toggleClass("over-inline");
					})
					.unbind('click').click(function(e) {						

						var $editable = $(this);
						if ($editable.hasClass('active-inline')) {
							return;
						};
						clicked = 0;
						
						content = $.trim($editable.html());
						
						$editable
							.addClass("active-inline")
							.empty();

						var editElement = '<input type="text" />';
						
						$(editElement)
							//.val(content)
							.appendTo($editable)
							.focus()
							.blur(function(e) {
								$editable.trigger('blur');
							});
					})
					.unbind('blur').blur(function(e) {						
						clicked = 1;
						var $editable = $(this);
						handleGetFail($editable);
					})
					.keyup(function(event){
						if(event.keyCode == 13){
							if (clicked == 1) {
								return;
							};
							clicked = 1;
							var $editable = $(this);
							handleGetSuccess@(item.ID)($editable);
						
						}
						if(event.keyCode == 27){
								if (clicked == 1) {
									return;
								};
								clicked = 1;
								var $editable = $(this);
								handleGetFail($editable);						
						}
					})
					;
			</script>
		</td>
		<th>
			@{
			// Выдать
			}
			<div id="dialog@(item.ID)" title="Выдать партию">
				<p>
					Выдать на склад:
					<select id="dialog_select_store_@(item.ID)" >
						<option value="0">Выберите склад</option>
						@foreach(var store in ViewBag.Stores)
						{
							if (ViewBag.theStore.ID != store.ID)
							{
								if (store.ID == ViewBag.theStore.ID)  {
									<option selected="selected" value="@(store.ID)">@store.Name</option>
								}
								else {
									<option value="@(store.ID)">@store.Name</option>
								}
							}
						}								
					</select>
				</p>
				
				<p>
					<input id="dialog_issue@(item.ID)" type="text" placeholder="Количество" >
				</p>
				
			</div>

			<script>
				$("#dialog@(item.ID)").dialog({
					autoOpen: false,
					height: 280,
					modal: true,
					resizable: false,
					buttons: {
						'Выдать': function() {
							$(this).dialog('close');

							if (  parseInt( $("#dialog_select_store_@(item.ID)").val() ) > 0 && parseInt($("#dialog_issue@(item.ID)").val()) )
							{
								$.get('@Url.Action("DevicesIssued", "Store")', { repository_id: @(ViewBag.theStore.ID), devmodel_id: @(item.DevmodelID), store_id: parseInt( $("#dialog_select_store_@(item.ID)").val() ), count_delta: parseInt( $("#dialog_issue@(item.ID)").val() ) }, function(data) {	});
								
								$("#mat_issued@(item.ID)").html( parseInt($("#mat_issued@(item.ID)").html()) + parseInt($("#dialog_issue@(item.ID)").val()) );
								$("#mat@(item.ID)").html( parseInt($("#mat@(item.ID)").html()) - parseInt($("#dialog_issue@(item.ID)").val()) );								
							}
						},
						'Отмена':function() {
							$(this).dialog('close');
						}
					}
				});
			</script>
			
            <div id="mat_issued@(item.ID)">				
				@item.CountIssue
			</div>	
			<script>
				$("#mat_issued@(item.ID)").click(function() {
					
					$("#dialog@(item.ID)").dialog('open');
				});
			</script>
        </th>


		<th>
			@{
			// Установлено
			}
            <div id="mat_setup@(item.ID)">
				@item.CountSetup
			</div>				
        </th>

			
        <th>
            @{
			// Брак
			}
            <div id="mat_marriage@(item.ID)">
				@item.CountMarriage
			</div>
        </th>

		<th>
            @Html.ActionLink("Удалить", "DeleteDevDetail", new { id=item.ID }, new { onclick = "return confirm('Вы действительно хотите удалить?');" })
        </th>
    </tr>
}
</tbody>
<tfoot>
    <tr>
        <th>
            Производитель
        </th>      
        <th>
            Тип
        </th> 
        <th>
            Наименование
        </th>		
		<th>
			Наличие
		</th>
		<th>
			Выдано
		</th>
		<th>
			Установлено
		</th>
		<th>
			Забраковано
		</th>
		<th>
			Действие
		</th>
	</tr>
	<tr>
			<th colspan="8" class="ts-pager form-horizontal">
				<button type="button" class="btn first"><i class="icon-step-backward glyphicon glyphicon-step-backward"></i></button>
				<button type="button" class="btn prev"><i class="icon-arrow-left glyphicon glyphicon-backward"></i></button>
				<span class="pagedisplay"></span> <!-- this can be any element, including an input -->
				<button type="button" class="btn next"><i class="icon-arrow-right glyphicon glyphicon-forward"></i></button>
				<button type="button" class="btn last"><i class="icon-step-forward glyphicon glyphicon-step-forward"></i></button>
				<select class="pagesize input-mini" title="Select page size">
					<option selected="selected" value="10">10</option>
					<option value="20">20</option>
					<option value="30">30</option>
					<option value="40">40</option>
					<option value="9999">Все</option>
				</select>
				<select class="pagenum input-mini" title="Select page number"></select>
			</th>
		</tr>
</tfoot>

</table>


<h2>Добавить новое оборудование</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
		<div class="editor-label">
            @Html.LabelFor(model => model.model)
        </div>
        <div class="editor-field">
			@Html.DropDownListFor(model => model.model, new SelectList((List<Devmodel>)(new Devmodel()).GetAll() , "ID", "FullName" ), new {@class="chosen-select", @style="width: 350px;" })
			@Html.ValidationMessageFor(model => model.model)
        </div>
		<br/>
		<div class="editor-label">
            @Html.LabelFor(model => model.count)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.count)
			@Html.ValidationMessageFor(model => model.count)
        </div>
		<br/>
        <p>
            <input type="submit" value="Добавить" /> @Html.ActionLink("Назад", "Index")
        </p>
    </fieldset>
}

