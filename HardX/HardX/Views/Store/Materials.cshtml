@model HardX.Models.Material
@using HardX.Models

@{
    ViewBag.Title = "Расходные материалы";
}




<style type="text/css">
        .ui-dialog .ui-dialog-content
        {
/*            position: relative;
            border: 0;
            padding: .5em 1em;
            background: none;
            overflow: auto;
            zoom: 1;*/
            background-color: #ffd;
            border: solid 1px #ea7;
        }
		
        .ui-dialog .ui-dialog-titlebar
        {
            background-color: #ffd;
            border: solid 1px #ea7;
        }

        .ui-widget-content
        {
            background-color: #ffd;
            border: solid 1px #ea7;
        }
    </style>

	
<p>
	Отчет за период c &nbsp
	<input type="text" id="report_bgn" class="tcal" readonly="readonly"  style="width: 70px" />
	по &nbsp
	<input type="text" id="report_end" class="tcal" readonly="readonly"  style="width: 70px" />
	&nbsp
	<a href="#" id="report_get">Выгрузить</a>
	<script>
		$("#report_get").click(function() {	
			/*
			$.get('@Url.Action("ReportMaterialsGet", "Store")', { repository_id: @(Convert.ToInt32(Model.Store.ID)), report_bgn: $("#report_bgn").val(), report_end: $("#report_end").val() }, function(data) {	});			
			*/

			$.fileDownload( '/Store/ReportMaterialsGet?repository_id=21&report_bgn='+$("#report_bgn").val()+'&report_end='+$("#report_end").val(), {
			
				preparingMessageHtml: "Происходит выгрузка отчёта, пожалуйста подождите...",
				failMessageHtml: "Возникли проблемы при формировании отчёта, необходимо повторить попытку позже."
			});
		});
	</script>
</p>
<table class="tablesorter">
<thead>
    <tr>     
        <th class="filter-select filter-exact" data-placeholder="Выбрать...">
            Производитель
        </th>
	
        <th class="filter-select filter-exact" data-placeholder="Выбрать...">
            Тип
        </th> 
	 

        <th>
            Наименование
        </th>

		<th>
            Совместимая техника
        </th>
		
		<th>
            Наличие
        </th>

		<th>
            Выдача
        </th>
					
        <th>
            Брак
        </th>

		<th>
            Действия
        </th>
		
				
        
    </tr>
</thead>

<tbody>
@foreach (var item in (new MaterialUchet()).GetAll("repository_id = " + Convert.ToInt32(Model.Store.ID)) ) {
    <tr> 

        <td>
            @item.vendor_name
        </td>
		    
        <td>
            @item.type_name
        </td>
	     <td>
            @item.Name 
        </td>
		          
        <td>
            @item.devnames
        </td>
		
        <td>
			@{// Наличие
			}
			<div id="mat@(item.ID)">
				@Model.Store.GetMaterialCount(@item.matmodel_id, 1)
			</div>
			<script>
				function handleGetSuccess@(item.ID)(editable)
				{
					var contents = editable.find(':first-child:input').val();
					
					if (" "+(parseInt( contents ))+" "!=" NaN ") {											
						var count_delta = parseInt( contents );
						contents = parseInt( contents ) + parseInt( content ) ;
						contents = contents + " ";
											
						if (count_delta > 0) {
							$.get('@Url.Action("MaterialsGet", "Store")', { repository_id: @(item.repository_id), matmodel_id: @(item.matmodel_id), count_delta: count_delta }, function(data) {	});
						} 
						else {
							$.get('@Url.Action("MaterialsDel", "Store")', { repository_id: @(item.repository_id), matmodel_id: @(item.matmodel_id), count_delta: Math.abs(count_delta) }, function(data) {	});
						}
											
					} else {
						contents = content;
					}

					editable
						.removeClass('active-inline')
						.contents()
						.replaceWith(contents);
				}

				function handleGetFail(editable)
				{
					contents = content;
					
					editable
							.removeClass('active-inline')
							.contents()
							.replaceWith(contents);
				}

				var clicked = 0;
				var content=0;
				$("#mat@(item.ID)")
					.hover(function() {
						$(this).toggleClass("over-inline");
					})
					.unbind('click').click(function(e) {						

						var $editable = $(this);
						if ($editable.hasClass('active-inline')) {
							return;
						};
						clicked = 0;
						
						content = $.trim($editable.html());
						
						$editable
							.addClass("active-inline")
							.empty();

						var editElement = '<input type="text" />';
						
						$(editElement)
							//.val(content)
							.appendTo($editable)
							.focus()
							.blur(function(e) {
								$editable.trigger('blur');
							});
					})
					.unbind('blur').blur(function(e) {						
						clicked = 1;
						var $editable = $(this);
						handleGetFail($editable);
					})
					.keyup(function(event){
						if(event.keyCode == 13){
							if (clicked == 1) {
								return;
							};
							clicked = 1;
							var $editable = $(this);
							handleGetSuccess@(item.ID)($editable);
						
						}
						if(event.keyCode == 27){
								if (clicked == 1) {
									return;
								};
								clicked = 1;
								var $editable = $(this);
								handleGetFail($editable);						
						}
					})
					;
			</script>
			
		</td>
		
        <th>
			@{
			// Выдать
			}
            <div id="mat_issued@(item.ID)">
				@item.count_issued
			</div>	
					
			<script>
				function handleIssueSuccess@(item.ID)(editable)
				{
					var contents = editable.find(':first-child:input').val();
					
					if (" "+(parseInt( contents ))+" "!=" NaN ") {											
						var count_delta = parseInt( contents );
						contents = parseInt( contents ) + parseInt( content ) ;
						contents = contents + " ";
											
						$("#mat@(item.ID)").html( parseInt($("#mat@(item.ID)").html()) - count_delta );

						if (count_delta > 0) {
							$.get('@Url.Action("MaterialsIssued", "Store")', { repository_id: @(item.repository_id), matmodel_id: @(item.matmodel_id), count_delta: count_delta }, function(data) {	});
						}
						else {
							$.get('@Url.Action("MaterialsIssuedDel", "Store")', { repository_id: @(item.repository_id), matmodel_id: @(item.matmodel_id), count_delta: Math.abs(count_delta) }, function(data) {	});
						}


											
					} else {
						contents = content;
					}

					editable
						.removeClass('active-inline')
						.contents()
						.replaceWith(contents);
				}

				function handleIssueFail(editable)
				{
					contents = content;
					
					editable
							.removeClass('active-inline')
							.contents()
							.replaceWith(contents);
				}

				var clicked = 0;
				var content=0;
				$("#mat_issued@(item.ID)")
					.hover(function() {
						$(this).toggleClass("over-inline");
					})
					.unbind('click').click(function(e) {						

						var $editable = $(this);
						if ($editable.hasClass('active-inline')) {
							return;
						};
						clicked = 0;
						
						content = $.trim($editable.html());
						
						$editable
							.addClass("active-inline")
							.empty();

						var editElement = '<input type="text" />';
						
						$(editElement)
							//.val(content)
							.appendTo($editable)
							.focus()
							.blur(function(e) {
								$editable.trigger('blur');
							});
					})
					.unbind('blur').blur(function(e) {						
						clicked = 1;
						var $editable = $(this);
						handleIssueFail($editable);
					})
					.keyup(function(event){
						if(event.keyCode == 13){
							if (clicked == 1) {
								return;
							};
							clicked = 1;
							var $editable = $(this);
							handleIssueSuccess@(item.ID)($editable);
						
						}
						if(event.keyCode == 27){
								if (clicked == 1) {
									return;
								};
								clicked = 1;
								var $editable = $(this);
								handleIssueFail($editable);						
						}
					})
					;
			</script>
			
        </th>
			
        <th>
            @{
			// Брак
			}
            <div id="mat_marriage@(item.ID)">
				@item.count_marriage
			</div>

			<script>
				function handleMarriageSuccess@(item.ID)(editable)
				{
					var contents = editable.find(':first-child:input').val();
					
					if (" "+(parseInt( contents ))+" "!=" NaN ") {											
						var count_delta = parseInt( contents );
						contents = parseInt( contents ) + parseInt( content ) ;
						contents = contents + " ";
											
						$("#mat@(item.ID)").html( parseInt($("#mat@(item.ID)").html()) - count_delta );

						if (count_delta > 0) {
							$.get('@Url.Action("MaterialsMarriage", "Store")', { repository_id: @(item.repository_id), matmodel_id: @(item.matmodel_id), count_delta: count_delta }, function(data) {	});
						}
						else {
							$.get('@Url.Action("MaterialsMarriageDel", "Store")', { repository_id: @(item.repository_id), matmodel_id: @(item.matmodel_id), count_delta: Math.abs(count_delta) }, function(data) {	});
						}


											
					} else {
						contents = content;
					}

					editable
						.removeClass('active-inline')
						.contents()
						.replaceWith(contents);
				}

				function handleMarriageFail(editable)
				{
					contents = content;
					
					editable
							.removeClass('active-inline')
							.contents()
							.replaceWith(contents);
				}

				var clicked = 0;
				var content=0;
				$("#mat_marriage@(item.ID)")
					.hover(function() {
						$(this).toggleClass("over-inline");
					})
					.unbind('click').click(function(e) {						

						var $editable = $(this);
						if ($editable.hasClass('active-inline')) {
							return;
						};
						clicked = 0;
						
						content = $.trim($editable.html());
						
						$editable
							.addClass("active-inline")
							.empty();

						var editElement = '<input type="text" />';
						
						$(editElement)
							//.val(content)
							.appendTo($editable)
							.focus()
							.blur(function(e) {
								$editable.trigger('blur');
							});
					})
					.unbind('blur').blur(function(e) {						
						clicked = 1;
						var $editable = $(this);
						handleMarriageFail($editable);
					})
					.keyup(function(event){
						if(event.keyCode == 13){
							if (clicked == 1) {
								return;
							};
							clicked = 1;
							var $editable = $(this);
							handleMarriageSuccess@(item.ID)($editable);
						
						}
						if(event.keyCode == 27){
								if (clicked == 1) {
									return;
								};
								clicked = 1;
								var $editable = $(this);
								handleMarriageFail($editable);						
						}
					})
					;
			</script>

			@{
			// Брак 
			}
        </th>
		
        <td>
            @Html.ActionLink("Удалить", "DeleteMatDetail", new { id=item.ID }, new { onclick = "return confirm('Вы действительно хотите удалить?');" })
        </td>
		
      
    </tr>
}
</tbody>
<tfoot>
    <tr>
		
	
        <th>
            Производитель
        </th>      
	
        <th>
            Тип
        </th> 

		   
        <th>
            Наименование
        </th>
		
		<th>
            Совместимая техника
        </th>
				
        <th>
            Наличие
        </th>
					
        <th>
            Выдача
        </th>
			
        <th>
            Брак
        </th>
      
        <td>
            Действия
        </td>
        
    </tr>
	<tr>
			<th colspan="8" class="ts-pager form-horizontal">
				<button type="button" class="btn first"><i class="icon-step-backward glyphicon glyphicon-step-backward"></i></button>
				<button type="button" class="btn prev"><i class="icon-arrow-left glyphicon glyphicon-backward"></i></button>
				<span class="pagedisplay"></span> <!-- this can be any element, including an input -->
				<button type="button" class="btn next"><i class="icon-arrow-right glyphicon glyphicon-forward"></i></button>
				<button type="button" class="btn last"><i class="icon-step-forward glyphicon glyphicon-step-forward"></i></button>
				<select class="pagesize input-mini" title="Select page size">
					<option selected="selected" value="10">10</option>
					<option value="20">20</option>
					<option value="30">30</option>
					<option value="40">40</option>
					<option value="9999">Все</option>
				</select>
				<select class="pagenum input-mini" title="Select page number"></select>
			</th>
		</tr>
</tfoot>

</table>


<h2>Добавить новый расходный материал</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>


		<div class="editor-label">
            @Html.LabelFor(model => model.Matmodel)
        </div>
        <div class="editor-field">
			@Html.DropDownListFor(model => model.MatmodelID, new SelectList((List<Matmodel>)(new Matmodel()).GetAll() , "ID", "FullName" ), new {@class="chosen-select", @style="width: 350px;" })
        </div>
		
		<br />
        
        <p>
            <input type="submit" value="Добавить" /> @Html.ActionLink("Назад", "Index")
        </p>
    </fieldset>
}

